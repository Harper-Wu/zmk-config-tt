/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        L_ESC {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };
    };

    behaviors {
        TAB_ESC: TAB_ESC {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;

            tapping-term-ms = <280>;
        };

        HRM_L: HRM_L {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-while-undecided;
            hold-trigger-key-positions = <6 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38 0 5 16 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 38>;
            require-prior-idle-ms = <150>;
        };

        HRM_R: HRM_R {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <175>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <38 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&TAB_ESC          &kp Q           &kp W           &kp E         &kp R              &kp T        &kp Y    &kp U              &kp I      &kp O           &kp P              &kp BSPC
&kp LEFT_SHIFT    &HRM_L LCTRL A  &HRM_L LSHFT S  &kp D         &HRM_L LEFT_GUI F  &kp G        &kp H    &HRM_R LEFT_GUI J  &kp K      &HRM_R RSHFT L  &HRM_R LCTRL SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z           &kp X           &kp C         &kp V              &kp B        &kp N    &kp M              &kp COMMA  &kp DOT         &kp FSLH           &kp ESCAPE
                                                  &kp LEFT_ALT  &kp LGUI           &kp SPACE    &kp RET  &mo 1              &mo 2
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5    &kp NUMBER_6      &kp NUMBER_7    &kp NUMBER_8    &kp N9     &kp N0         &kp BACKSPACE
&kp LEFT_SHIFT  &trans        &trans        &kp DEL       &kp MINUS         &kp EQUAL       &kp LESS_THAN     &kp HOME        &kp UP_ARROW    &kp END    &kp PAGE_UP    &kp BACKSLASH
&kp LCTRL       &trans        &trans        &kp INS       &kp LEFT_BRACKET  &kp RBKT        &kp GREATER_THAN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp PAGE_DOWN  &trans
                                            &kp LEFT_ALT  &kp LGUI          &kp SPACE       &kp RET           &trans          &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1      &kp F2           &kp F3           &kp F4           &kp F5           &kp F6             &kp F7             &kp F8            &kp F9          &kp F10     &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &kp C_VOLUME_UP    &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp K_NEXT  &trans   &trans
&kp LSHFT   &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI    &kp C_VOLUME_DOWN  &kp C_MUTE        &trans          &trans      &trans   &trans
                                              &kp LALT         &kp LGUI         &kp SPACE          &kp RET            &trans            &trans
            >;
        };
    };
};
